[{"/home/goku/projects/skill-share-react/src/reportWebVitals.js":"1","/home/goku/projects/skill-share-react/src/index.js":"2","/home/goku/projects/skill-share-react/src/components/Auth/Register.js":"3","/home/goku/projects/skill-share-react/src/App.js":"4","/home/goku/projects/skill-share-react/src/components/Home/Home.js":"5","/home/goku/projects/skill-share-react/src/functions.js":"6","/home/goku/projects/skill-share-react/src/components/Header/Header.js":"7","/home/goku/projects/skill-share-react/src/api/resolver.js":"8","/home/goku/projects/skill-share-react/src/api/UserAPI.js":"9","/home/goku/projects/skill-share-react/src/components/Auth/Login.js":"10","/home/goku/projects/skill-share-react/src/components/Dashboard/Dashboard.js":"11","/home/goku/projects/skill-share-react/src/components/Post/Post.js":"12","/home/goku/projects/skill-share-react/src/components/Editor/CustomEditor.js":"13","/home/goku/projects/skill-share-react/src/components/WritePost/WritePost.js":"14","/home/goku/projects/skill-share-react/src/api/PostAPI.js":"15","/home/goku/projects/skill-share-react/src/components/PostView/PostView.js":"16","/home/goku/projects/skill-share-react/src/components/Post/PendingPost.js":"17","/home/goku/projects/skill-share-react/src/components/Post/Comment.js":"18"},{"size":362,"mtime":1609758223830,"results":"19","hashOfConfig":"20"},{"size":500,"mtime":1609758223830,"results":"21","hashOfConfig":"20"},{"size":3252,"mtime":1610287355300,"results":"22","hashOfConfig":"20"},{"size":2858,"mtime":1610278399690,"results":"23","hashOfConfig":"20"},{"size":1606,"mtime":1610287484240,"results":"24","hashOfConfig":"20"},{"size":372,"mtime":1610038166210,"results":"25","hashOfConfig":"20"},{"size":1519,"mtime":1610287379740,"results":"26","hashOfConfig":"20"},{"size":202,"mtime":1609759604270,"results":"27","hashOfConfig":"20"},{"size":1305,"mtime":1610208268550,"results":"28","hashOfConfig":"20"},{"size":2426,"mtime":1610282522780,"results":"29","hashOfConfig":"20"},{"size":3518,"mtime":1610287360810,"results":"30","hashOfConfig":"20"},{"size":4997,"mtime":1610287498800,"results":"31","hashOfConfig":"20"},{"size":4206,"mtime":1610287373330,"results":"32","hashOfConfig":"20"},{"size":1598,"mtime":1610037797580,"results":"33","hashOfConfig":"20"},{"size":3450,"mtime":1610261866560,"results":"34","hashOfConfig":"20"},{"size":1540,"mtime":1610285495640,"results":"35","hashOfConfig":"20"},{"size":2105,"mtime":1610284424380,"results":"36","hashOfConfig":"20"},{"size":422,"mtime":1610258307350,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},"1ayp4kr",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/goku/projects/skill-share-react/src/reportWebVitals.js",[],["81","82"],"/home/goku/projects/skill-share-react/src/index.js",[],["83","84"],"/home/goku/projects/skill-share-react/src/components/Auth/Register.js",["85"],"import React, { useRef } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport UserAPI from '../../api/UserAPI';\n\n/**\n * @author\n * @function Register\n **/\n\nconst Register = (props) => {\n  const emailElRef = useRef('');\n  const passwordElRef = useRef('');\n  const firstNameElRef = useRef('');\n  const lastNameElRef = useRef('');\n\n  const history = useHistory();\n\n  const handleLogin = async (e) => {\n    e.preventDefault();\n\n    const { data, err } = await UserAPI.signUp({\n      email: emailElRef.current.value,\n      password: passwordElRef.current.value,\n      firstName: firstNameElRef.current.value,\n      lastName: lastNameElRef.current.value,\n    });\n\n    if (err) {\n      console.error(err);\n    } else {\n      history.push('/login');\n    }\n  };\n\n  return (\n    <div className=\"flex flex-col justify-center items-center h-screen px-2\">\n      <p className=\"text-3xl\">Register</p>\n      <form\n        className=\"group w-full max-w-sm p-5 border rounded-xl border-opacity-50 m-5 border-indigo-500 transition-all hover:bg-indigo-50 hover:shadow-lg hover:border-transparent\"\n        onSubmit={(e) => handleLogin(e)}\n      >\n        <div className=\"mb-4\">\n          <label className=\"block text-sm text-indigo-500 font-bold text-left group-hover:text-indigo-800\">\n            Email\n          </label>\n          <input\n            className=\"border border-gray-400 appearance-none rounded w-full p-2 mt-1 focus:border-indigo-600 focus: outline-none active:border-indigo-600\"\n            type=\"text\"\n            placeholder=\"Email\"\n            ref={emailElRef}\n          />\n        </div>\n        <div className=\"mb-4\">\n          <label className=\"block text-sm text-indigo-500 font-bold text-left group-hover:text-indigo-800\">\n            Password\n          </label>\n          <input\n            className=\"border border-gray-400 appearance-none rounded w-full p-2 mt-1 focus:border-indigo-600 focus: outline-none active:border-indigo-600\"\n            type=\"password\"\n            placeholder=\"Password\"\n            ref={passwordElRef}\n          />\n        </div>\n\n        <div className=\"mb-4\">\n          <label className=\"block text-sm text-indigo-500 font-bold text-left group-hover:text-indigo-800\">\n            First Name\n          </label>\n          <input\n            className=\"border border-gray-400 appearance-none rounded w-full p-2 mt-1 focus:border-indigo-600 focus: outline-none active:border-indigo-600\"\n            type=\"text\"\n            placeholder=\"First Name\"\n            ref={firstNameElRef}\n          />\n        </div>\n\n        <div className=\"mb-4\">\n          <label className=\"block text-sm text-indigo-500 font-bold text-left group-hover:text-indigo-800\">\n            Last Name\n          </label>\n          <input\n            className=\"border border-gray-400 appearance-none rounded w-full p-2 mt-1 focus:border-indigo-600 focus: outline-none active:border-indigo-600\"\n            type=\"text\"\n            placeholder=\"Last Name\"\n            ref={lastNameElRef}\n          />\n        </div>\n\n        <div className=\"flex justify-center\">\n          <button type=\"submit\" className=\"btn-indigo mx-1\">\n            Register\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default Register;\n",["86","87"],"/home/goku/projects/skill-share-react/src/App.js",["88","89"],"import React, { useEffect, useState } from 'react';\nimport {\n  BrowserRouter,\n  Switch,\n  Route,\n  Redirect,\n  useHistory,\n} from 'react-router-dom';\nimport UserAPI from './api/UserAPI';\nimport './App.css';\nimport Login from './components/Auth/Login';\n\nimport Header from './components/Header/Header';\nimport Home from './components/Home/Home';\nimport context from './context/context';\nimport Cookies from 'universal-cookie';\nimport Register from './components/Auth/Register.js';\nimport Dashboard from './components/Dashboard/Dashboard';\nimport Post from './components/Post/Post';\nimport PendingPost from './components/Post/PendingPost';\n\nimport WritePost from './components/WritePost/WritePost';\n\nfunction App() {\n  const [token, setToken] = useState(null);\n  const [user, setUser] = useState(null);\n  const cookies = new Cookies();\n  const updateUser = async (token) => {\n    const { data, err } = await UserAPI.updateUser(token);\n\n    if (err) {\n      console.error(err);\n      console.log('updateUser error');\n    } else {\n      setUser(data);\n    }\n  };\n\n  const logIn = ({ token, expires }, callback) => {\n    // console.log({ token, expires });\n    cookies.set('token', token, {\n      path: '/',\n      expires: new Date(expires),\n    });\n    setToken(token);\n    updateUser(token);\n\n    if (callback) {\n      callback();\n    }\n  };\n\n  const logOut = (callback) => {\n    cookies.remove('token');\n    setToken(null);\n    setUser(null);\n\n    if (callback) {\n      callback();\n    }\n  };\n\n  useEffect(() => {\n    const token = cookies.get('token');\n\n    if (token) {\n      updateUser(token);\n      setToken(token);\n    }\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <div className=\"App flex justify-center\">\n      <div className=\"w-full\">\n        <BrowserRouter>\n          <context.Provider\n            value={{\n              token,\n              user,\n              updateUser,\n              logIn,\n              logOut,\n              setUser,\n            }}\n          >\n            <Header />\n            <div className=\"w-full flex justify-center\">\n              <div className=\"w-full\">\n                <Switch>\n                  <Route path=\"/\" component={Home} exact />\n                  <Route path=\"/login\" component={Login} />\n                  <Route path=\"/register\" component={Register} />\n                  <Route path=\"/post/:id\" component={Post} />\n                  {user && (\n                    <Route path=\"/pending/:id\" component={PendingPost} />\n                  )}\n                  {user && <Route path=\"/write\" component={WritePost} />}\n                  {user && <Route path=\"/dashboard\" component={Dashboard} />}\n                </Switch>\n              </div>\n            </div>\n          </context.Provider>\n        </BrowserRouter>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","/home/goku/projects/skill-share-react/src/components/Home/Home.js",["90","91"],"/home/goku/projects/skill-share-react/src/functions.js",[],"/home/goku/projects/skill-share-react/src/components/Header/Header.js",[],"/home/goku/projects/skill-share-react/src/api/resolver.js",["92"],"export default async (promise) => {\n  const resolved = {\n    data: null,\n    err: null,\n  };\n\n  try {\n    resolved.data = await promise;\n  } catch (e) {\n    resolved.err = e;\n  }\n\n  return resolved;\n};\n","/home/goku/projects/skill-share-react/src/api/UserAPI.js",["93"],"/home/goku/projects/skill-share-react/src/components/Auth/Login.js",[],"/home/goku/projects/skill-share-react/src/components/Dashboard/Dashboard.js",["94"],"/home/goku/projects/skill-share-react/src/components/Post/Post.js",["95"],"/home/goku/projects/skill-share-react/src/components/Editor/CustomEditor.js",["96"],"import { BLOCK_TYPE, DraftailEditor, INLINE_STYLE } from 'draftail';\nimport { EditorState, convertFromRaw, convertToRaw } from 'draft-js';\nimport createInlineToolbarPlugin, {\n  Separator,\n} from 'draft-js-inline-toolbar-plugin';\nimport {\n  ItalicButton,\n  BoldButton,\n  UnderlineButton,\n  CodeButton,\n  HeadlineOneButton,\n  HeadlineTwoButton,\n  HeadlineThreeButton,\n  UnorderedListButton,\n  OrderedListButton,\n  CodeBlockButton,\n} from 'draft-js-buttons';\n\nimport React, { useEffect, useState } from 'react';\n\nimport 'draft-js/dist/Draft.css';\nimport 'draftail/dist/draftail.css';\nimport 'draft-js-inline-toolbar-plugin/lib/plugin.css';\nimport './CustomEditor.css';\n\nconst inlineToolbarPlugin = createInlineToolbarPlugin();\nconst { InlineToolbar } = inlineToolbarPlugin;\n\nconst CustomEditor = ({\n  bindContent,\n  bindTitleContent,\n  bindTitle,\n  readOnly = false,\n  post = null,\n}) => {\n  const initialTitle = !post\n    ? JSON.parse(sessionStorage.getItem('draftail:title'))\n    : JSON.parse(post.titleContent);\n\n  const initialContent = !post\n    ? JSON.parse(sessionStorage.getItem('draftail:content'))\n    : JSON.parse(post.content);\n\n  const [editorState, setEditorState] = useState(() => {\n    if (initialTitle) {\n      // console.log('initial title', initialTitle);\n      return EditorState.createWithContent(convertFromRaw(initialTitle));\n    }\n    return EditorState.createEmpty();\n  });\n\n  const onSaveContent = (content) => {\n    if (content && bindContent) {\n      bindContent(content);\n    }\n\n    console.log('saving content', content);\n    sessionStorage.setItem('draftail:content', JSON.stringify(content));\n  };\n\n  const onSaveTitle = (newEditorState) => {\n    const content = convertToRaw(newEditorState.getCurrentContent());\n    if (bindTitleContent && bindTitle) {\n      bindTitle(newEditorState.getCurrentContent().getPlainText('\\u0001'));\n      bindTitleContent(content);\n    }\n    setEditorState(newEditorState);\n    console.log('saving title', content);\n    sessionStorage.setItem('draftail:title', JSON.stringify(content));\n  };\n\n  const bindPost = () => {\n    if (initialContent && bindContent) {\n      bindContent(initialContent);\n    }\n    if (initialTitle && bindTitleContent && bindTitle) {\n      bindTitleContent(initialTitle);\n      // extract title\n      bindTitle(convertFromRaw(initialTitle).getPlainText('\\u0001'));\n    }\n  };\n\n  useEffect(() => {\n    if (!readOnly) {\n      bindPost();\n    }\n  }, []);\n\n  return (\n    <div className=\"hover:bg-white shadow-lg border-transparent max-w-screen-md\">\n      <div className=\"post-title\">\n        <DraftailEditor\n          stripPastedStyles={true}\n          readOnly={readOnly}\n          editorState={editorState}\n          onChange={!readOnly ? onSaveTitle : null}\n          placeholder={!readOnly ? 'Your title...' : ''}\n          topToolbar={null}\n        />\n      </div>\n      <DraftailEditor\n        rawContentState={initialContent || null}\n        onSave={!readOnly ? onSaveContent : null}\n        readOnly={readOnly}\n        stripPastedStyles={true}\n        placeholder={!readOnly ? 'Type something...' : ''}\n        plugins={[inlineToolbarPlugin]}\n        topToolbar={null}\n        blockTypes={[\n          { type: BLOCK_TYPE.HEADER_THREE },\n          { type: BLOCK_TYPE.UNORDERED_LIST_ITEM },\n        ]}\n        inlineStyles={[\n          { type: INLINE_STYLE.BOLD },\n          { type: INLINE_STYLE.ITALIC },\n          { type: INLINE_STYLE.UNDERLINE },\n        ]}\n      />\n      <InlineToolbar>\n        {(externalProps) => (\n          <React.Fragment>\n            <BoldButton {...externalProps} />\n            <ItalicButton {...externalProps} />\n            <UnderlineButton {...externalProps} />\n            <CodeButton {...externalProps} />\n            <Separator {...externalProps} />\n\n            <HeadlineOneButton {...externalProps} />\n            <HeadlineTwoButton {...externalProps} />\n            <HeadlineThreeButton {...externalProps} />\n\n            <UnorderedListButton {...externalProps} />\n            <OrderedListButton {...externalProps} />\n\n            <CodeBlockButton {...externalProps} />\n          </React.Fragment>\n        )}\n      </InlineToolbar>\n    </div>\n  );\n};\n\nexport default CustomEditor;\n","/home/goku/projects/skill-share-react/src/components/WritePost/WritePost.js",[],"/home/goku/projects/skill-share-react/src/api/PostAPI.js",[],"/home/goku/projects/skill-share-react/src/components/PostView/PostView.js",[],"/home/goku/projects/skill-share-react/src/components/Post/PendingPost.js",["97","98"],"/home/goku/projects/skill-share-react/src/components/Post/Comment.js",[],{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"99","replacedBy":"103"},{"ruleId":"101","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":21,"column":13,"nodeType":"107","messageId":"108","endLine":21,"endColumn":17},{"ruleId":"99","replacedBy":"109"},{"ruleId":"101","replacedBy":"110"},{"ruleId":"105","severity":1,"message":"111","line":6,"column":3,"nodeType":"107","messageId":"108","endLine":6,"endColumn":11},{"ruleId":"105","severity":1,"message":"112","line":7,"column":3,"nodeType":"107","messageId":"108","endLine":7,"endColumn":13},{"ruleId":"105","severity":1,"message":"113","line":16,"column":19,"nodeType":"107","messageId":"108","endLine":16,"endColumn":22},{"ruleId":"114","severity":1,"message":"115","line":23,"column":6,"nodeType":"116","endLine":23,"endColumn":8,"suggestions":"117"},{"ruleId":"118","severity":1,"message":"119","line":1,"column":1,"nodeType":"120","endLine":14,"endColumn":3},{"ruleId":"118","severity":1,"message":"121","line":56,"column":1,"nodeType":"120","endLine":56,"endColumn":70},{"ruleId":"114","severity":1,"message":"122","line":46,"column":6,"nodeType":"116","endLine":46,"endColumn":8,"suggestions":"123"},{"ruleId":"114","severity":1,"message":"124","line":92,"column":6,"nodeType":"116","endLine":92,"endColumn":10,"suggestions":"125"},{"ruleId":"114","severity":1,"message":"126","line":87,"column":6,"nodeType":"116","endLine":87,"endColumn":8,"suggestions":"127"},{"ruleId":"105","severity":1,"message":"128","line":10,"column":11,"nodeType":"107","messageId":"108","endLine":10,"endColumn":15},{"ruleId":"114","severity":1,"message":"124","line":47,"column":6,"nodeType":"116","endLine":47,"endColumn":10,"suggestions":"129"},"no-native-reassign",["130"],"no-negated-in-lhs",["131"],["130"],["131"],"no-unused-vars","'data' is assigned a value but never used.","Identifier","unusedVar",["130"],["131"],"'Redirect' is defined but never used.","'useHistory' is defined but never used.","'err' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'searchInput'. Either include it or remove the dependency array.","ArrayExpression",["132"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","Assign object to a variable before exporting as module default","React Hook useEffect has missing dependencies: 'token', 'updateUser', and 'user.userType'. Either include them or remove the dependency array.",["133"],"React Hook useEffect has a missing dependency: 'fetchPost'. Either include it or remove the dependency array.",["134"],"React Hook useEffect has missing dependencies: 'bindPost' and 'readOnly'. Either include them or remove the dependency array.",["135"],"'user' is assigned a value but never used.",["136"],"no-global-assign","no-unsafe-negation",{"desc":"137","fix":"138"},{"desc":"139","fix":"140"},{"desc":"141","fix":"142"},{"desc":"143","fix":"144"},{"desc":"141","fix":"145"},"Update the dependencies array to be: [searchInput]",{"range":"146","text":"147"},"Update the dependencies array to be: [token, updateUser, user.userType]",{"range":"148","text":"149"},"Update the dependencies array to be: [fetchPost, id]",{"range":"150","text":"151"},"Update the dependencies array to be: [bindPost, readOnly]",{"range":"152","text":"153"},{"range":"154","text":"151"},[575,577],"[searchInput]",[1323,1325],"[token, updateUser, user.userType]",[2402,2406],"[fetchPost, id]",[2432,2434],"[bindPost, readOnly]",[1160,1164]]